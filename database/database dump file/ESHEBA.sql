/*
 Navicat Premium Data Transfer

 Source Server         : e-sheba
 Source Server Type    : Oracle
 Source Server Version : 190000
 Source Host           : localhost:1521
 Source Schema         : ESHEBA

 Target Server Type    : Oracle
 Target Server Version : 190000
 File Encoding         : 65001

 Date: 23/02/2022 09:18:23
*/


-- ----------------------------
-- Table structure for ACCOUNT
-- ----------------------------
DROP TABLE "ESHEBA"."ACCOUNT";
CREATE TABLE "ESHEBA"."ACCOUNT" (
  "TRANSACTION_ID" NUMBER VISIBLE DEFAULT "ESHEBA"."ISEQ$$_77834".nextval NOT NULL,
  "DEBIT" NUMBER VISIBLE,
  "CREDIT" NUMBER VISIBLE,
  "CURRENT_AMOUNT" NUMBER VISIBLE,
  "PAYMENT_ID" NUMBER VISIBLE,
  "TRANS_DATE" DATE VISIBLE DEFAULT SYSDATE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CART
-- ----------------------------
DROP TABLE "ESHEBA"."CART";
CREATE TABLE "ESHEBA"."CART" (
  "C_ID" NUMBER VISIBLE,
  "S_ID" NUMBER VISIBLE,
  "QUANTITY" NUMBER VISIBLE,
  "PRICE" NUMBER VISIBLE,
  "IMG" VARCHAR2(500 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CATEGORY
-- ----------------------------
DROP TABLE "ESHEBA"."CATEGORY";
CREATE TABLE "ESHEBA"."CATEGORY" (
  "CATEGORY_ID" NUMBER VISIBLE DEFAULT "ESHEBA"."ISEQ$$_77815".nextval NOT NULL,
  "CATEGORY_NAME" VARCHAR2(50 BYTE) VISIBLE NOT NULL,
  "DESCRIPTION" VARCHAR2(500 BYTE) VISIBLE,
  "MODERATED_BY" NUMBER VISIBLE,
  "IMG" VARCHAR2(250 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CUSTOMER
-- ----------------------------
DROP TABLE "ESHEBA"."CUSTOMER";
CREATE TABLE "ESHEBA"."CUSTOMER" (
  "CUSTOMER_ID" NUMBER VISIBLE DEFAULT "ESHEBA"."ISEQ$$_77805".nextval NOT NULL,
  "NAME" VARCHAR2(60 BYTE) VISIBLE NOT NULL,
  "EMAIL" VARCHAR2(40 BYTE) VISIBLE NOT NULL,
  "PASSWORD" VARCHAR2(500 BYTE) VISIBLE NOT NULL,
  "PHONE_NUMBER" VARCHAR2(20 BYTE) VISIBLE NOT NULL,
  "ADDRESS" VARCHAR2(250 BYTE) VISIBLE,
  "REG_DATE" DATE VISIBLE DEFAULT SYSDATE,
  "TOTAL_SERVICES_TAKEN" NUMBER VISIBLE,
  "TOKEN" VARCHAR2(200 BYTE) VISIBLE,
  "USER_TYPE" VARCHAR2(50 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for INCLUDED_IN
-- ----------------------------
DROP TABLE "ESHEBA"."INCLUDED_IN";
CREATE TABLE "ESHEBA"."INCLUDED_IN" (
  "SVC_ID" NUMBER VISIBLE NOT NULL,
  "ORDER_ID" NUMBER VISIBLE NOT NULL,
  "ORDER_STATUS" VARCHAR2(15 BYTE) VISIBLE,
  "PROVIDER_ID" NUMBER VISIBLE,
  "QUANTITY" NUMBER VISIBLE,
  "COST" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for MODERATOR
-- ----------------------------
DROP TABLE "ESHEBA"."MODERATOR";
CREATE TABLE "ESHEBA"."MODERATOR" (
  "MODERATOR_ID" NUMBER VISIBLE DEFAULT "ESHEBA"."ISEQ$$_77830".nextval NOT NULL,
  "MODERATOR_NAME" VARCHAR2(40 BYTE) VISIBLE NOT NULL,
  "EMAIL" VARCHAR2(30 BYTE) VISIBLE NOT NULL,
  "PASSWORD" VARCHAR2(200 BYTE) VISIBLE NOT NULL,
  "PHONE_NO" VARCHAR2(20 BYTE) VISIBLE NOT NULL,
  "PRESENT_ADDRESS" VARCHAR2(100 BYTE) VISIBLE,
  "PERMANENT_ADDRESS" VARCHAR2(100 BYTE) VISIBLE,
  "SALARY" NUMBER VISIBLE,
  "BANK_ACCOUNT_NO" VARCHAR2(30 BYTE) VISIBLE,
  "HIRE_DATE" DATE VISIBLE DEFAULT SYSDATE,
  "END_DATE" DATE VISIBLE,
  "TOKEN" VARCHAR2(500 BYTE) VISIBLE,
  "USER_TYPE" VARCHAR2(30 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for OFFERS
-- ----------------------------
DROP TABLE "ESHEBA"."OFFERS";
CREATE TABLE "ESHEBA"."OFFERS" (
  "OFFER_ID" NUMBER VISIBLE NOT NULL,
  "SERVICE_ID" NUMBER VISIBLE NOT NULL,
  "OFFER_NAME" VARCHAR2(40 BYTE) VISIBLE,
  "DISCOUNT" NUMBER VISIBLE,
  "START_DATE" DATE VISIBLE DEFAULT SYSDATE,
  "END_DATE" DATE VISIBLE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ORDERS
-- ----------------------------
DROP TABLE "ESHEBA"."ORDERS";
CREATE TABLE "ESHEBA"."ORDERS" (
  "ORDER_ID" NUMBER VISIBLE DEFAULT "ESHEBA"."ISEQ$$_77821".nextval NOT NULL,
  "ORDER_DATE" DATE VISIBLE DEFAULT SYSDATE,
  "ORDER_ADDRESS" VARCHAR2(100 BYTE) VISIBLE NOT NULL,
  "ORDER_NOTES" VARCHAR2(500 BYTE) VISIBLE,
  "ORDER_STATUS" VARCHAR2(20 BYTE) VISIBLE,
  "C_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PAYMENT_INFO
-- ----------------------------
DROP TABLE "ESHEBA"."PAYMENT_INFO";
CREATE TABLE "ESHEBA"."PAYMENT_INFO" (
  "PAYMENT_ID" NUMBER VISIBLE DEFAULT "ESHEBA"."ISEQ$$_77824".nextval NOT NULL,
  "ORDER_ID" NUMBER VISIBLE,
  "AMOUNT" NUMBER VISIBLE NOT NULL,
  "METHOD" VARCHAR2(20 BYTE) VISIBLE NOT NULL,
  "TRANSACTION_ID" VARCHAR2(30 BYTE) VISIBLE,
  "PAY_PHONE" VARCHAR2(20 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for RATINGS
-- ----------------------------
DROP TABLE "ESHEBA"."RATINGS";
CREATE TABLE "ESHEBA"."RATINGS" (
  "REVIEW_ID" NUMBER VISIBLE NOT NULL,
  "STAR" NUMBER VISIBLE,
  "COMMENTS" VARCHAR2(600 BYTE) VISIBLE,
  "C_ID" NUMBER VISIBLE,
  "CAT_ID" NUMBER VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for SERVICE
-- ----------------------------
DROP TABLE "ESHEBA"."SERVICE";
CREATE TABLE "ESHEBA"."SERVICE" (
  "SERVICE_ID" NUMBER VISIBLE DEFAULT "ESHEBA"."ISEQ$$_77818".nextval NOT NULL,
  "SERVICE_NAME" VARCHAR2(100 BYTE) VISIBLE NOT NULL,
  "DESCRIPTION" VARCHAR2(500 BYTE) VISIBLE,
  "COST" NUMBER VISIBLE NOT NULL,
  "CATEGORY_ID" NUMBER VISIBLE,
  "IMG" VARCHAR2(500 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for SERVICE_PROVIDER
-- ----------------------------
DROP TABLE "ESHEBA"."SERVICE_PROVIDER";
CREATE TABLE "ESHEBA"."SERVICE_PROVIDER" (
  "PROVIDER_ID" NUMBER VISIBLE DEFAULT "ESHEBA"."ISEQ$$_77809".nextval NOT NULL,
  "NAME" VARCHAR2(40 BYTE) VISIBLE NOT NULL,
  "EMAIL" VARCHAR2(40 BYTE) VISIBLE NOT NULL,
  "PASSWORD" VARCHAR2(500 BYTE) VISIBLE NOT NULL,
  "PHONE_NUMBER" VARCHAR2(20 BYTE) VISIBLE NOT NULL,
  "REG_DATE" DATE VISIBLE DEFAULT SYSDATE,
  "INCOME" NUMBER VISIBLE,
  "LICENCE_ID" VARCHAR2(40 BYTE) VISIBLE,
  "PROVIDES" NUMBER VISIBLE,
  "TOKEN" VARCHAR2(500 BYTE) VISIBLE,
  "USER_TYPE" VARCHAR2(50 BYTE) VISIBLE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Function structure for ALLOCATE_EMPLOYEES
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "ESHEBA"."ALLOCATE_EMPLOYEES" AS
BEGIN 

FOR R IN (SELECT E.EMPLOYEE_ID AS EID, C.CHOICE AS CHOICE , E.HIRE_DATE AS HIRE_DATE, E.DEPARTMENT_ID AS DID , L.LIMIT AS LIMIT 
FROM EMPLOYEES E JOIN OPTIONS C ON (E.EMPLOYEE_ID = C.EMPLOYEE_ID)
LEFT JOIN LIMITS L ON (E.DEPARTMENT_ID = L.DEPARTMENT_ID)
ORDER BY C.CHOICE, E.HIRE_DATE)

LOOP 

SELECT COUNT(*) INTO LIM FROM LIMITS WHERE LIMITS.DEPARTMENT_ID = R.DID;

IF LIM = 0 THEN 
SELECT COUNT(*) INTO ID FROM EMPLOYEE_DEPARTMENT WHERE EMOLOYEE_ID = R.EID;
IF ID = 0 THEN 
INSERT INTO EMPLOYEE_DEPARTMENT VALUES (R.EID, R.DID);
END IF;

ELSE
SELECT LIMIT INTO LIM2 FROM LIMITS2 WHERE LIMITS2.DEPARTMENT_ID = R.DID;
IF LIM2 <= LIM THEN 
SELECT COUNT(*) INTO ID FROM EMPLOYEE_DEPARTMENT WHERE EMPLOYEE_ID = R.EID;
IF ID = 0 THEN 
INSERT INTO EMPLOYEE_DEPARTMENT VALUES(R.EID, R.DID);
SELECT LIMIT INTO LIM3 FROM LIMITS2 WHERE LIMITS2.DEPARTMENT_ID = R.DID;
LIM3 := LIM3 + 1; 
UPDATE LIMITS2 SET LIMIT = LIM3 WHERE LIMITS2.DEPARTMENT_ID = R.DID;

END IF;
END IF;
END IF;

END LOOP;

END;
/

-- ----------------------------
-- Function structure for ASSIGN_ORDER
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "ESHEBA"."ASSIGN_ORDER" AS
BEGIN
DBMS_OUTPUT.PUT_LINE(PID);
	SELECT
		COUNT( * ) INTO CNT 
	FROM
		INCLUDED_IN 
	WHERE
		SVC_ID = SID 
		AND ORDER_ID = OID 
		AND ORDER_STATUS = 'PENDING';
	IF
		CNT > 0 THEN
			UPDATE INCLUDED_IN 
			SET ORDER_STATUS = 'ACCEPTED', PROVIDER_ID = PID
		WHERE
			SVC_ID = SID 
			AND ORDER_ID = OID;
		
	END IF;
END;
/

-- ----------------------------
-- Function structure for CREATE_CART
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "ESHEBA"."CREATE_CART" AS
BEGIN
		TEMP_PRICE := 0;
	SELECT
		COUNT( * ) INTO CNT 
	FROM
		OFFERS 
	WHERE
		OFFERS.SERVICE_ID = SID AND OFFERS.END_DATE > SYSDATE;
	IF
		CNT > 0 THEN
		SELECT
			( S.COST - S.COST * ( O.DISCOUNT / 100 ) ) INTO TEMP_PRICE 
		FROM
			SERVICE S
			JOIN OFFERS O ON ( S.SERVICE_ID = O.SERVICE_ID ) 
		WHERE
			O.SERVICE_ID = SID;
		ELSE SELECT
			COST INTO TEMP_PRICE 
		FROM
			SERVICE 
		WHERE
			SERVICE_ID = SID;
		
	END IF;

INSERT INTO CART (S_ID, C_ID, QUANTITY, PRICE, IMG) VALUES(SID, CID, QUAN, TEMP_PRICE, IMG);
END;
/

-- ----------------------------
-- Function structure for DELETE_OFFER
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "ESHEBA"."DELETE_OFFER" AS
BEGIN
DELETE FROM OFFERS WHERE OFFERS.END_DATE < SYSDATE;
END;
/

-- ----------------------------
-- Function structure for INSERT_ORDERS
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "ESHEBA"."INSERT_ORDERS" AS
BEGIN 

OID := ORDER_SEQ.NEXTVAL;

INSERT INTO ORDERS(ORDER_ID, ORDER_ADDRESS, ORDER_NOTES, ORDER_STATUS, C_ID)
VALUES(OID, ADDRESS, NOTES, 'PENDING', CID);

INSERT INTO PAYMENT_INFO(ORDER_ID, AMOUNT, METHOD, TRANSACTION_ID, PAY_PHONE) VALUES(OID, U_AMOUNT, U_METHOD, U_TRANSACTION_ID, U_PAY_PHONE);

END;
/

-- ----------------------------
-- Function structure for UPDATE_ORDER_STATUS
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "ESHEBA"."UPDATE_ORDER_STATUS" AS
BEGIN 

SELECT COUNT(*) INTO CNT FROM INCLUDED_IN WHERE ORDER_ID = OID AND ORDER_STATUS='COMPLETED';
SELECT COUNT(*) INTO CNT_ALL FROM INCLUDED_IN WHERE ORDER_ID = OID;

IF CNT = CNT_ALL THEN 
UPDATE ORDERS SET ORDERS.ORDER_STATUS = 'COMPLETED' WHERE ORDER_ID = OID;
END IF;

END;
/

-- ----------------------------
-- Sequence structure for ISEQ$$_77805
-- ----------------------------
DROP SEQUENCE "ESHEBA"."ISEQ$$_77805";
CREATE SEQUENCE "ESHEBA"."ISEQ$$_77805" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77809
-- ----------------------------
DROP SEQUENCE "ESHEBA"."ISEQ$$_77809";
CREATE SEQUENCE "ESHEBA"."ISEQ$$_77809" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77815
-- ----------------------------
DROP SEQUENCE "ESHEBA"."ISEQ$$_77815";
CREATE SEQUENCE "ESHEBA"."ISEQ$$_77815" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77818
-- ----------------------------
DROP SEQUENCE "ESHEBA"."ISEQ$$_77818";
CREATE SEQUENCE "ESHEBA"."ISEQ$$_77818" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77821
-- ----------------------------
DROP SEQUENCE "ESHEBA"."ISEQ$$_77821";
CREATE SEQUENCE "ESHEBA"."ISEQ$$_77821" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77824
-- ----------------------------
DROP SEQUENCE "ESHEBA"."ISEQ$$_77824";
CREATE SEQUENCE "ESHEBA"."ISEQ$$_77824" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77827
-- ----------------------------
DROP SEQUENCE "ESHEBA"."ISEQ$$_77827";
CREATE SEQUENCE "ESHEBA"."ISEQ$$_77827" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77830
-- ----------------------------
DROP SEQUENCE "ESHEBA"."ISEQ$$_77830";
CREATE SEQUENCE "ESHEBA"."ISEQ$$_77830" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ISEQ$$_77834
-- ----------------------------
DROP SEQUENCE "ESHEBA"."ISEQ$$_77834";
CREATE SEQUENCE "ESHEBA"."ISEQ$$_77834" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for OFFER_SEQ
-- ----------------------------
DROP SEQUENCE "ESHEBA"."OFFER_SEQ";
CREATE SEQUENCE "ESHEBA"."OFFER_SEQ" MINVALUE 5 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ORDER_SEQ
-- ----------------------------
DROP SEQUENCE "ESHEBA"."ORDER_SEQ";
CREATE SEQUENCE "ESHEBA"."ORDER_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for PAYMENT_INFO_SEQ
-- ----------------------------
DROP SEQUENCE "ESHEBA"."PAYMENT_INFO_SEQ";
CREATE SEQUENCE "ESHEBA"."PAYMENT_INFO_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ
-- ----------------------------
DROP SEQUENCE "ESHEBA"."SEQ";
CREATE SEQUENCE "ESHEBA"."SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Primary Key structure for table ACCOUNT
-- ----------------------------
ALTER TABLE "ESHEBA"."ACCOUNT" ADD CONSTRAINT "ACCOUNT_PK" PRIMARY KEY ("TRANSACTION_ID");

-- ----------------------------
-- Checks structure for table ACCOUNT
-- ----------------------------
ALTER TABLE "ESHEBA"."ACCOUNT" ADD CONSTRAINT "SYS_C007964" CHECK ("TRANSACTION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table CATEGORY
-- ----------------------------
ALTER TABLE "ESHEBA"."CATEGORY" ADD CONSTRAINT "CATEGORY_PK" PRIMARY KEY ("CATEGORY_ID");

-- ----------------------------
-- Checks structure for table CATEGORY
-- ----------------------------
ALTER TABLE "ESHEBA"."CATEGORY" ADD CONSTRAINT "SYS_C007933" CHECK ("CATEGORY_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."CATEGORY" ADD CONSTRAINT "SYS_C007934" CHECK ("CATEGORY_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table CUSTOMER
-- ----------------------------
ALTER TABLE "ESHEBA"."CUSTOMER" ADD CONSTRAINT "CUSTOMER_PK" PRIMARY KEY ("CUSTOMER_ID");

-- ----------------------------
-- Uniques structure for table CUSTOMER
-- ----------------------------
ALTER TABLE "ESHEBA"."CUSTOMER" ADD CONSTRAINT "SYS_C007923" UNIQUE ("EMAIL") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table CUSTOMER
-- ----------------------------
ALTER TABLE "ESHEBA"."CUSTOMER" ADD CONSTRAINT "SYS_C007917" CHECK ("CUSTOMER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."CUSTOMER" ADD CONSTRAINT "SYS_C007918" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."CUSTOMER" ADD CONSTRAINT "SYS_C007919" CHECK ("EMAIL" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."CUSTOMER" ADD CONSTRAINT "SYS_C007920" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."CUSTOMER" ADD CONSTRAINT "SYS_C007921" CHECK ("PHONE_NUMBER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table INCLUDED_IN
-- ----------------------------
ALTER TABLE "ESHEBA"."INCLUDED_IN" ADD CONSTRAINT "INCLUDED_IN_PK" PRIMARY KEY ("SVC_ID", "ORDER_ID");

-- ----------------------------
-- Triggers structure for table INCLUDED_IN
-- ----------------------------
CREATE TRIGGER "ESHEBA"."UPDATE_ACCOUNT_TRANSACTION" AFTER UPDATE ON "ESHEBA"."INCLUDED_IN" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW WHEN (NEW.ORDER_STATUS = 'COMPLETED') 
DECLARE
PID NUMBER;
OID NUMBER;
NEWDEB NUMBER;

BEGIN 

OID := :OLD.ORDER_ID;
NEWDEB := :OLD.COST*0.75*:OLD.QUANTITY;


SELECT PAYMENT_ID INTO PID FROM PAYMENT_INFO WHERE ORDER_ID = OID;

UPDATE ACCOUNT SET DEBIT = (DEBIT + NEWDEB) , CURRENT_AMOUNT = (CURRENT_AMOUNT - NEWDEB) , TRANS_DATE = SYSDATE
WHERE PAYMENT_ID = PID;

UPDATE SERVICE_PROVIDER SET INCOME = NVL(INCOME,0) + NEWDEB WHERE PROVIDER_ID = :OLD.PROVIDER_ID;

END;
/

-- ----------------------------
-- Primary Key structure for table MODERATOR
-- ----------------------------
ALTER TABLE "ESHEBA"."MODERATOR" ADD CONSTRAINT "MODERATOR_PK" PRIMARY KEY ("MODERATOR_ID");

-- ----------------------------
-- Uniques structure for table MODERATOR
-- ----------------------------
ALTER TABLE "ESHEBA"."MODERATOR" ADD CONSTRAINT "SYS_C007962" UNIQUE ("EMAIL") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table MODERATOR
-- ----------------------------
ALTER TABLE "ESHEBA"."MODERATOR" ADD CONSTRAINT "SYS_C007956" CHECK ("MODERATOR_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."MODERATOR" ADD CONSTRAINT "SYS_C007957" CHECK ("MODERATOR_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."MODERATOR" ADD CONSTRAINT "SYS_C007958" CHECK ("EMAIL" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."MODERATOR" ADD CONSTRAINT "SYS_C007959" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."MODERATOR" ADD CONSTRAINT "SYS_C007960" CHECK ("PHONE_NO" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table OFFERS
-- ----------------------------
ALTER TABLE "ESHEBA"."OFFERS" ADD CONSTRAINT "OFFERS_PK" PRIMARY KEY ("OFFER_ID", "SERVICE_ID");

-- ----------------------------
-- Checks structure for table OFFERS
-- ----------------------------
ALTER TABLE "ESHEBA"."OFFERS" ADD CONSTRAINT "SYS_C008025" CHECK ("END_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table OFFERS
-- ----------------------------
CREATE TRIGGER "ESHEBA"."UPDATE_CART_PRICE" AFTER DELETE ON "ESHEBA"."OFFERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE 

NEW_COST NUMBER;
SID NUMBER;

BEGIN 

SID := :OLD.SERVICE_ID;
SELECT COST INTO NEW_COST FROM SERVICE WHERE SERVICE_ID = SID;
UPDATE CART SET PRICE = NEW_COST WHERE S_ID = SID;

END;
/
CREATE TRIGGER "ESHEBA"."UPDATE_OFFERED_PRICE_IN_CART" AFTER INSERT ON "ESHEBA"."OFFERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE 
NEW_COST NUMBER;


BEGIN 

SELECT COST INTO NEW_COST FROM SERVICE WHERE SERVICE_ID = :NEW.SERVICE_ID; 
UPDATE CART SET PRICE = NEW_COST * (100-:NEW.DISCOUNT)/100 WHERE S_ID = :NEW.SERVICE_ID;

END;
/

-- ----------------------------
-- Primary Key structure for table ORDERS
-- ----------------------------
ALTER TABLE "ESHEBA"."ORDERS" ADD CONSTRAINT "SYS_C007945" PRIMARY KEY ("ORDER_ID");

-- ----------------------------
-- Checks structure for table ORDERS
-- ----------------------------
ALTER TABLE "ESHEBA"."ORDERS" ADD CONSTRAINT "SYS_C007943" CHECK ("ORDER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."ORDERS" ADD CONSTRAINT "SYS_C007944" CHECK ("ORDER_ADDRESS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ORDERS
-- ----------------------------
CREATE TRIGGER "ESHEBA"."DELETE_CUSTOMER_CART" AFTER INSERT ON "ESHEBA"."ORDERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE 

BEGIN 


FOR R IN (SELECT * FROM CART WHERE C_ID = :NEW.C_ID)

LOOP

INSERT INTO INCLUDED_IN(ORDER_ID, SVC_ID, ORDER_STATUS, QUANTITY, COST) VALUES (:NEW.ORDER_ID, R.S_ID, 'PENDING', R.QUANTITY, R.PRICE);

END LOOP;

DELETE FROM CART WHERE CART.C_ID = :NEW.C_ID;

END;
/

-- ----------------------------
-- Primary Key structure for table PAYMENT_INFO
-- ----------------------------
ALTER TABLE "ESHEBA"."PAYMENT_INFO" ADD CONSTRAINT "PAYMENT_INFO_PK" PRIMARY KEY ("PAYMENT_ID");

-- ----------------------------
-- Checks structure for table PAYMENT_INFO
-- ----------------------------
ALTER TABLE "ESHEBA"."PAYMENT_INFO" ADD CONSTRAINT "SYS_C007946" CHECK ("PAYMENT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."PAYMENT_INFO" ADD CONSTRAINT "SYS_C007947" CHECK ("AMOUNT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."PAYMENT_INFO" ADD CONSTRAINT "SYS_C007948" CHECK ("METHOD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table PAYMENT_INFO
-- ----------------------------
CREATE TRIGGER "ESHEBA"."ACCOUNT_TRANSACTION" AFTER INSERT ON "ESHEBA"."PAYMENT_INFO" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE 


BEGIN 

INSERT INTO ACCOUNT(DEBIT, CREDIT, CURRENT_AMOUNT, PAYMENT_ID) VALUES(0, :NEW.AMOUNT, :NEW.AMOUNT, :NEW.PAYMENT_ID);

END;
/

-- ----------------------------
-- Primary Key structure for table RATINGS
-- ----------------------------
ALTER TABLE "ESHEBA"."RATINGS" ADD CONSTRAINT "RATINGS_PK" PRIMARY KEY ("REVIEW_ID");

-- ----------------------------
-- Primary Key structure for table SERVICE
-- ----------------------------
ALTER TABLE "ESHEBA"."SERVICE" ADD CONSTRAINT "SERVICE_PK" PRIMARY KEY ("SERVICE_ID");

-- ----------------------------
-- Checks structure for table SERVICE
-- ----------------------------
ALTER TABLE "ESHEBA"."SERVICE" ADD CONSTRAINT "SYS_C007937" CHECK ("SERVICE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."SERVICE" ADD CONSTRAINT "SYS_C007938" CHECK ("SERVICE_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."SERVICE" ADD CONSTRAINT "SYS_C007939" CHECK ("COST" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table SERVICE_PROVIDER
-- ----------------------------
ALTER TABLE "ESHEBA"."SERVICE_PROVIDER" ADD CONSTRAINT "PROVIDER_PK" PRIMARY KEY ("PROVIDER_ID");

-- ----------------------------
-- Uniques structure for table SERVICE_PROVIDER
-- ----------------------------
ALTER TABLE "ESHEBA"."SERVICE_PROVIDER" ADD CONSTRAINT "SYS_C007930" UNIQUE ("EMAIL") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table SERVICE_PROVIDER
-- ----------------------------
ALTER TABLE "ESHEBA"."SERVICE_PROVIDER" ADD CONSTRAINT "SYS_C007924" CHECK ("PROVIDER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."SERVICE_PROVIDER" ADD CONSTRAINT "SYS_C007925" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."SERVICE_PROVIDER" ADD CONSTRAINT "SYS_C007926" CHECK ("EMAIL" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."SERVICE_PROVIDER" ADD CONSTRAINT "SYS_C007927" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."SERVICE_PROVIDER" ADD CONSTRAINT "SYS_C007928" CHECK ("PHONE_NUMBER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACCOUNT
-- ----------------------------
ALTER TABLE "ESHEBA"."ACCOUNT" ADD CONSTRAINT "FK_PAYMENT" FOREIGN KEY ("PAYMENT_ID") REFERENCES "ESHEBA"."PAYMENT_INFO" ("PAYMENT_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table CART
-- ----------------------------
ALTER TABLE "ESHEBA"."CART" ADD CONSTRAINT "FK_CUS" FOREIGN KEY ("C_ID") REFERENCES "ESHEBA"."CUSTOMER" ("CUSTOMER_ID") ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."CART" ADD CONSTRAINT "FK_SER" FOREIGN KEY ("S_ID") REFERENCES "ESHEBA"."SERVICE" ("SERVICE_ID") ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table CATEGORY
-- ----------------------------
ALTER TABLE "ESHEBA"."CATEGORY" ADD CONSTRAINT "FK_MODERATES" FOREIGN KEY ("MODERATED_BY") REFERENCES "ESHEBA"."MODERATOR" ("MODERATOR_ID") ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table INCLUDED_IN
-- ----------------------------
ALTER TABLE "ESHEBA"."INCLUDED_IN" ADD CONSTRAINT "FK_INCLUDED_IN" FOREIGN KEY ("SVC_ID") REFERENCES "ESHEBA"."SERVICE" ("SERVICE_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."INCLUDED_IN" ADD CONSTRAINT "FK_INCLUDED_IN_2" FOREIGN KEY ("ORDER_ID") REFERENCES "ESHEBA"."ORDERS" ("ORDER_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."INCLUDED_IN" ADD CONSTRAINT "FK_PROVIDER_II" FOREIGN KEY ("PROVIDER_ID") REFERENCES "ESHEBA"."SERVICE_PROVIDER" ("PROVIDER_ID") ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table OFFERS
-- ----------------------------
ALTER TABLE "ESHEBA"."OFFERS" ADD CONSTRAINT "FK_SERVICE_OFFER" FOREIGN KEY ("SERVICE_ID") REFERENCES "ESHEBA"."SERVICE" ("SERVICE_ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table PAYMENT_INFO
-- ----------------------------
ALTER TABLE "ESHEBA"."PAYMENT_INFO" ADD CONSTRAINT "FK_ORDER" FOREIGN KEY ("ORDER_ID") REFERENCES "ESHEBA"."ORDERS" ("ORDER_ID") ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table RATINGS
-- ----------------------------
ALTER TABLE "ESHEBA"."RATINGS" ADD CONSTRAINT "FK_CUSTOMER" FOREIGN KEY ("C_ID") REFERENCES "ESHEBA"."CUSTOMER" ("CUSTOMER_ID") ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ESHEBA"."RATINGS" ADD CONSTRAINT "FK_PROVIDER" FOREIGN KEY ("CAT_ID") REFERENCES "ESHEBA"."CATEGORY" ("CATEGORY_ID") ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table SERVICE
-- ----------------------------
ALTER TABLE "ESHEBA"."SERVICE" ADD CONSTRAINT "FK_CATEGORY" FOREIGN KEY ("CATEGORY_ID") REFERENCES "ESHEBA"."CATEGORY" ("CATEGORY_ID") ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table SERVICE_PROVIDER
-- ----------------------------
ALTER TABLE "ESHEBA"."SERVICE_PROVIDER" ADD CONSTRAINT "FK_PROVIDES" FOREIGN KEY ("PROVIDES") REFERENCES "ESHEBA"."SERVICE" ("SERVICE_ID") ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
